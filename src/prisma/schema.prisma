// This is your Prisma schema file
// Learn more: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  name             String?
  email            String?  @unique
  emailVerified    Boolean? @default(true)
  verificationCode String?  @default("")
  hashedPassword   String?
  image            String?  @default("")
  about            String?  @default("Hey there! I am using HieroGlyph")
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  lastSeen         DateTime? @default(now())

  conversationIds  String[] @db.ObjectId
  seenMessageIds   String[] @db.ObjectId

  accounts         Account[]
  messages         Message[]
}

model Account {
  id                 String   @id @default(auto()) @map("_id") @db.ObjectId
  userId             String   @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.String
  refresh_token_expires_in Int?
  access_token       String?  @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.String
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Conversation {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt    DateTime @default(now())
  lastMessageAt DateTime @default(now())
  name         String?
  isGroup      Boolean?
  logo         String?

  messageIds   String[] @db.ObjectId
  userIds      String[] @db.ObjectId
}

model Message {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  body           String?
  image          String?
  audio          String?
  type           String?
  createdAt      DateTime @default(now())

  seenIds        String[] @db.ObjectId

  conversationId String   @db.ObjectId
  senderId       String   @db.ObjectId
}
